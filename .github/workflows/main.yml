name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  backend:
    name: build-backend
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./rbs-backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get current date
        id: get-date
        run: echo "datetime=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"

      - name: Restore OWASP cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ~/.m2/repository
            ~/.cache/dependency-check
          key: ${{ runner.os }}-owasp-${{ steps.get-date.outputs.datetime }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-owasp-${{ steps.get-date.outputs.datetime }}
            ${{ runner.os }}-owasp-

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Build and test backend and run OWASP Dependency Check and SonarQube
        run: |
          mvn clean verify
        env:
          NVD_API_KEY: ${{ secrets.NVD_KEY }}

      - name: Save OWASP cache
        uses: actions/cache/save@v3
        if: always()
        with:
          path: |
            ~/.m2/repository
            ~/.cache/dependency-check
          key: ${{ runner.os }}-owasp-${{ steps.get-date.outputs.datetime }}-${{ hashFiles('**/pom.xml') }}

      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: rbs-backend/target/dependency-check-report.html

      - name: Run Checkstyle
        run: mvn checkstyle:check -Ddependency-check.skip=true

      - name: Upload Checkstyle report
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: ./rbs-backend/target/checkstyle-result.xml

      - name: Run PMD
        run: mvn pmd:check -Ddependency-check.skip=true

      - name: Upload PMD report
        uses: actions/upload-artifact@v4
        with:
          name: pmd-report
          path: ./rbs-backend/target/pmd.xml

  frontend:
    name: build-frontend
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./rbs-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install

      - name: Build and test frontend
        run: bun test
      
      # - name: SonarQube Scan for Frontend
      #   uses: SonarSource/sonarqube-scan-action@v5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     projectBaseDir: ./rbs-frontend

      - name: Run ESLint and save report
        run: bun eslint . --format stylish --output-file eslint-report.txt

      - name: Upload ESLint report
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: ./rbs-frontend/eslint-report.txt

      - name: Run Prettier format
        run: bun prettier --write .

  sonarqube:
    name: Run SonarQube Analysis
    needs: [backend, frontend]
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for SonarQube to have full history
          
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-combined
          restore-keys: ${{ runner.os }}-sonar-combined
          
      - name: Run SonarQube Combined Analysis
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=iss-group-8_rbs
            -Dsonar.projectName="RBS"
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=./rbs-backend/src,./rbs-frontend
            -Dsonar.java.binaries=./rbs-backend/target/classes
            -Dsonar.exclusions=**/node_modules/**,**/target/**,**/*.test.js,**/*.test.ts
            -Dsonar.javascript.lcov.reportPaths=./rbs-frontend/coverage/lcov.info
            -Dsonar.java.coveragePlugin=jacoco
            -Dsonar.coverage.jacoco.xmlReportPaths=./rbs-backend/target/site/jacoco/jacoco.xml
